

#### FORMULATIONS FOR THE GENERAL MODEL (without the complete comonotone assumption)

##Model_Basic_MIP (without the trivial variable fixing): (referred to as MILP1 before) [NO POINT TO INCLUDE IT, IGNORE!]
#problem Model_Basic_MIP: eta,v,tau,z,u,theta,lambda,y,r,sigma,OBJ, C_RobustificationLinear,C_Linearization_z_1,C_Linearization_z_2,C_Linearization_z_3,
#C_varsigma_1,C_varsigma_2,C_LinearizationTypeI_1,C_LinearizationTypeI_2,C_LinearizationTypeI_3,
#C_LinearizationTypeII_1,C_LinearizationTypeII_2, C_LinearizationTypeII_3,C_Control, C_LinearOrdering_1,C_LinearOrdering_2, C_LinearOrdering_3;


##Model_Basic_MIP: Using McCormick Envelopes (without the trivial variable fixing sigma[i,i,l]=0); CONSIDERED AS THE BASIC STARTING FORMULATION
problem Model_Basic_MIP: eta,v,tau,z,u,theta,lambda,y,r,sigma,OBJ, C_RobustificationLinear,C_Linearization_z_1,C_Linearization_z_2,C_Linearization_z_3,
C_varsigma_1_compact,C_varsigma_2_compact,C_LinearizationTypeI_1,C_LinearizationTypeI_2,C_LinearizationTypeI_3,
C_LinearizationTypeII_1_compact,C_LinearizationTypeII_2_compact,C_LinearizationTypeII_3_compact,C_sigma_fix,
C_Control, C_LinearOrdering_1,C_LinearOrdering_2, C_LinearOrdering_3;

problem Model_Basic_MIP_RLT: eta,v,tau,z,u,theta,lambda,y,r,sigma,OBJ, C_RobustificationLinear,C_Linearization_z_1,C_Linearization_z_2,C_Linearization_z_3,
C_varsigma_1_compact,C_varsigma_2_compact,C_LinearizationTypeI_1,C_LinearizationTypeI_2,C_LinearizationTypeI_3,
C_LinearizationTypeII_1_compact,C_LinearizationTypeII_2_compact,C_LinearizationTypeII_3_compact,C_sigma_fix,
C_Control, C_LinearOrdering_1,C_LinearOrdering_2, C_LinearOrdering_3,C_ValidIneq1,C_ValidIneq2;

##Model_Basic_MIP_Sym:  ##CAN also be considered as the basic starting MIP formulation
problem Model_Basic_MIP_Sym: eta,v,tau,z,u,theta,lambda_sym,y,r_sym,sigma_sym,OBJ, C_RobustificationLinear_compact,C_RobustificationLinear_sym1,C_RobustificationLinear_sym2,
C_Linearization_z_1,C_Linearization_z_2,C_Linearization_z_3, C_varsigma_1_sym, C_varsigma_2_sym,
C_LinearizationTypeI_1,C_LinearizationTypeI_2,C_LinearizationTypeI_3,C_LinearizationTypeII_1_sym,C_LinearizationTypeII_2_sym,C_LinearizationTypeII_3_sym,
C_Control, C_LinearOrdering_1,C_LinearOrdering_2, C_LinearOrdering_3;


###Basic + Sym + Hybrid
problem Model_Basic_MIP_Hybrid: eta,v,tau,z,u,theta,lambda_hybrid,y,r_hybrid,sigma_hybrid,OBJ, C_RobustificationLinear_compact,C_RobustificationLinear_hybrid1,C_RobustificationLinear_hybrid2,
C_Linearization_z_1,C_Linearization_z_2,C_Linearization_z_3, C_varsigma_1_compact_hybrid, C_varsigma_2_compact_hybrid,
C_LinearizationTypeI_1,C_LinearizationTypeI_2,C_LinearizationTypeI_3,C_LinearizationTypeII_1_hybrid,C_LinearizationTypeII_2_hybrid,C_LinearizationTypeII_3_hybrid,
C_Control, C_LinearOrdering_1,C_LinearOrdering_2, C_LinearOrdering_3;


###Basic + Sym + Hybrid + RLT
problem Model_Basic_MIP_Hybrid_RLT: eta,v,tau,z,u,theta,lambda_hybrid,y,r_hybrid,sigma_hybrid,OBJ, C_RobustificationLinear_compact,C_RobustificationLinear_hybrid1,C_RobustificationLinear_hybrid2,
C_Linearization_z_1,C_Linearization_z_2,C_Linearization_z_3, C_varsigma_1_compact_hybrid, C_varsigma_2_compact_hybrid,
C_LinearizationTypeI_1,C_LinearizationTypeI_2,C_LinearizationTypeI_3,C_LinearizationTypeII_1_hybrid,C_LinearizationTypeII_2_hybrid,C_LinearizationTypeII_3_hybrid,
C_Control, C_LinearOrdering_1,C_LinearOrdering_2, C_LinearOrdering_3,C_ValidIneq1,C_ValidIneq2;


##the total cost of speed-up is considered via a budget constraint

##Model_Basic_MIP_B: Using McCormick Envelopes (without the trivial variable fixing sigma[i,i,l]=0); CONSIDERED AS THE BASIC STARTING FORMULATION
problem Model_Basic_MIP_B: eta,v,tau,z,u,theta,lambda,y,r,sigma,RobustifiedCVaR, C_RobustificationLinear,C_Linearization_z_1,C_Linearization_z_2,C_Linearization_z_3,
C_varsigma_1_compact,C_varsigma_2_compact,C_LinearizationTypeI_1,C_LinearizationTypeI_2,C_LinearizationTypeI_3,
C_LinearizationTypeII_1_compact,C_LinearizationTypeII_2_compact,C_LinearizationTypeII_3_compact,C_sigma_fix,
C_Control, C_LinearOrdering_1,C_LinearOrdering_2, C_LinearOrdering_3,C_Budget;

problem Model_Basic_MIP_B_RLT: eta,v,tau,z,u,theta,lambda,y,r,sigma,RobustifiedCVaR, C_RobustificationLinear,C_Linearization_z_1,C_Linearization_z_2,C_Linearization_z_3,
C_varsigma_1_compact,C_varsigma_2_compact,C_LinearizationTypeI_1,C_LinearizationTypeI_2,C_LinearizationTypeI_3,
C_LinearizationTypeII_1_compact,C_LinearizationTypeII_2_compact,C_LinearizationTypeII_3_compact,C_sigma_fix,
C_Control, C_LinearOrdering_1,C_LinearOrdering_2, C_LinearOrdering_3,C_Budget,C_ValidIneq1,C_ValidIneq2;


##Model_Basic_MIP_B_Sym: 
problem Model_Basic_MIP_B_Sym: eta,v,tau,z,u,theta,lambda_sym,y,r_sym,sigma_sym,RobustifiedCVaR, C_RobustificationLinear_compact,C_RobustificationLinear_sym1,C_RobustificationLinear_sym2,
C_Linearization_z_1,C_Linearization_z_2,C_Linearization_z_3, C_varsigma_1_sym, C_varsigma_2_sym,
C_LinearizationTypeI_1,C_LinearizationTypeI_2,C_LinearizationTypeI_3,C_LinearizationTypeII_1_sym,C_LinearizationTypeII_2_sym,C_LinearizationTypeII_3_sym,
C_Control, C_LinearOrdering_1,C_LinearOrdering_2, C_LinearOrdering_3,C_Budget;

###Basic+ Symmetric + Hybrid 
problem Model_Basic_MIP_B_Hybrid: eta,v,tau,z,u,theta,lambda_hybrid,y,r_hybrid,sigma_hybrid,RobustifiedCVaR, C_RobustificationLinear_compact,C_RobustificationLinear_hybrid1,C_RobustificationLinear_hybrid2,
C_Linearization_z_1,C_Linearization_z_2,C_Linearization_z_3, C_varsigma_1_compact_hybrid, C_varsigma_2_compact_hybrid,
C_LinearizationTypeI_1,C_LinearizationTypeI_2,C_LinearizationTypeI_3,C_LinearizationTypeII_1_hybrid,C_LinearizationTypeII_2_hybrid,C_LinearizationTypeII_3_hybrid,
C_Control, C_LinearOrdering_1,C_LinearOrdering_2, C_LinearOrdering_3,C_Budget;

###Basic+ Symmetric + Hybrid + RLT
problem Model_Basic_MIP_B_Hybrid_RLT: eta,v,tau,z,u,theta,lambda_hybrid,y,r_hybrid,sigma_hybrid,RobustifiedCVaR, C_RobustificationLinear_compact,C_RobustificationLinear_hybrid1,C_RobustificationLinear_hybrid2,
C_Linearization_z_1,C_Linearization_z_2,C_Linearization_z_3, C_varsigma_1_compact_hybrid, C_varsigma_2_compact_hybrid,
C_LinearizationTypeI_1,C_LinearizationTypeI_2,C_LinearizationTypeI_3,C_LinearizationTypeII_1_hybrid,C_LinearizationTypeII_2_hybrid,C_LinearizationTypeII_3_hybrid,
C_Control, C_LinearOrdering_1,C_LinearOrdering_2, C_LinearOrdering_3,C_ValidIneq1,C_ValidIneq2,C_Budget;




#### FORMULATIONS FOR THE CASE WITH THE COMONOTONE ASSUMPTION

problem Model2_Basic_MIP: eta,v,tau,z,u,theta,y,OBJ, C_Robustification_Comonotone,C_Linearization_z_1,C_Linearization_z_2,C_Linearization_z_3,C_LinearizationTypeI_1,
C_LinearizationTypeI_2,C_LinearizationTypeI_3,C_Control, C_LinearOrdering_1,C_LinearOrdering_2, C_LinearOrdering_3;

problem Model2_Basic_MIP_RLT: eta,v,tau,z,u,theta,y,OBJ, C_Robustification_Comonotone,C_Linearization_z_1,C_Linearization_z_2,C_Linearization_z_3,C_LinearizationTypeI_1,
C_LinearizationTypeI_2,C_LinearizationTypeI_3,C_Control, C_LinearOrdering_1,C_LinearOrdering_2, C_LinearOrdering_3,
C_ValidIneq1,C_ValidIneq2;

		
##the total cost of speed-up is considered via a budget constraint
problem Model2_Basic_MIP_B: eta,v,tau,z,u,theta,y,RobustifiedCVaR, C_Robustification_Comonotone,C_Linearization_z_1,C_Linearization_z_2,C_Linearization_z_3,C_LinearizationTypeI_1,
C_LinearizationTypeI_2,C_LinearizationTypeI_3,C_Control, C_LinearOrdering_1,C_LinearOrdering_2, C_LinearOrdering_3,C_Budget;

problem Model2_Basic_MIP_B_RLT: eta,v,tau,z,u,theta,y,RobustifiedCVaR, C_Robustification_Comonotone,C_Linearization_z_1,C_Linearization_z_2,C_Linearization_z_3,C_LinearizationTypeI_1,
C_LinearizationTypeI_2,C_LinearizationTypeI_3,C_Control, C_LinearOrdering_1,C_LinearOrdering_2, C_LinearOrdering_3,
C_ValidIneq1,C_ValidIneq2,C_Budget;




	let SelectedModels:={2,3,4};
	
		
		solve Model_Basic_MIP_Sym;

      	let M_ResNum[2]:= solve_result_num;
		if (solve_result_num >=200)  then  

 		{let M_INDICATE[2]:=1;##infeasible problem 
 		
		} 

		let {k in L, l in L} M_Vectheta[2,k,l]:=theta[k,l].val;
		let {t in T, k in L} M_Vecu[2,t,k]:=u[t,k].val;
		let M_OBFV[2]:=OBJ;
		let M_Bestnode[2]:=OBJ.bestnode;
		let M_Cost[2,1]:=sum{t in T, l in L} h[t,l]*u[t,l].val;
		let M_Cost[2,2]:=eta.val + (1/(1-alpha)) * sum{i in S}p[i]*v[i].val + (1/(1-alpha)) * kappa * tau.val;
		let {l in L} M_Sequence[2,l]:=sum{k in L} theta[k,l].val;
		let M_tau[2]:= tau.val;
		let M_Time[2,1]:=_ampl_user_time-temp_ampl_user;
		let M_Time[2,2]:=_ampl_elapsed_time-temp_ampl_elapsed;
		let M_Time[2,3]:=_solve_user_time;
		let M_Time[2,4]:=_solve_elapsed_time;
		let M_Message[2]:=solve_message;
		let Name[2]:='Model_Basic_MIP_Sym';
		
	
		solve Model_Basic_MIP_Hybrid;

      	let M_ResNum[3]:= solve_result_num;
		if (solve_result_num >=200)  then  

 		{let M_INDICATE[3]:=1;##infeasible problem 
 		
		} 

		let {k in L, l in L} M_Vectheta[3,k,l]:=theta[k,l].val;
		let {t in T, k in L} M_Vecu[3,t,k]:=u[t,k].val;
		let M_OBFV[3]:=OBJ;
		let M_Bestnode[3]:=OBJ.bestnode;
		let M_Cost[3,1]:=sum{t in T, l in L} h[t,l]*u[t,l].val;
		let M_Cost[3,2]:=eta.val + (1/(1-alpha)) * sum{i in S}p[i]*v[i].val + (1/(1-alpha)) * kappa * tau.val;
		let {l in L} M_Sequence[3,l]:=sum{k in L} theta[k,l].val;
		let M_tau[3]:= tau.val;
		let M_Time[3,1]:=_ampl_user_time-temp_ampl_user;
		let M_Time[3,2]:=_ampl_elapsed_time-temp_ampl_elapsed;
		let M_Time[3,3]:=_solve_user_time;
		let M_Time[3,4]:=_solve_elapsed_time;
		let M_Message[3]:=solve_message;
		let Name[3]:='Model_Basic_MIP_Hybrid';
	
	
		solve Model_Basic_MIP_Hybrid_RLT;

      	let M_ResNum[4]:= solve_result_num;
		if (solve_result_num >=200)  then  

 		{let M_INDICATE[4]:=1;##infeasible problem 
 		
		} 

		let {k in L, l in L} M_Vectheta[4,k,l]:=theta[k,l].val;
		let {t in T, k in L} M_Vecu[4,t,k]:=u[t,k].val;
		let M_OBFV[4]:=OBJ;
		let M_Bestnode[4]:=OBJ.bestnode;
		let M_Cost[4,1]:=sum{t in T, l in L} h[t,l]*u[t,l].val;
		let M_Cost[4,2]:=eta.val + (1/(1-alpha)) * sum{i in S}p[i]*v[i].val + (1/(1-alpha)) * kappa * tau.val;
		let {l in L} M_Sequence[4,l]:=sum{k in L} theta[k,l].val;
		let M_tau[4]:= tau.val;
		let M_Time[4,1]:=_ampl_user_time-temp_ampl_user;
		let M_Time[4,2]:=_ampl_elapsed_time-temp_ampl_elapsed;
		let M_Time[4,3]:=_solve_user_time;
		let M_Time[4,4]:=_solve_elapsed_time;
		let M_Message[4]:=solve_message;
		let Name[4]:='Model_Basic_MIP_Hybrid_RLT';

	
		
		
	